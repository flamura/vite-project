{"version":3,"file":"vendor.a3f78726.js","sources":["../../node_modules/@vue/shared/dist/shared.esm-bundler.js","../../node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","../../node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","../../node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","../../node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js","../../node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js","../../node_modules/vue/dist/vue.esm-bundler.js","../../node_modules/@vueuse/head/dist/index.mjs","../../node_modules/pinia/dist/pinia.esm-browser.js","../../node_modules/vue-router/dist/vue-router.esm-bundler.js"],"sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            oldValue = toRaw(oldValue);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst shallowReadonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, true)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n    shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        if (self._dirty) {\r\n            self._value = this.effect();\r\n            self._dirty = false;\r\n        }\r\n        track(self, \"get\" /* GET */, 'value');\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    // mark this as a compiled slot function.\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue(props);\r\n                    setCurrentInstance(null);\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */, [\r\n                    instance && instance.proxy\r\n                ]);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */, [\r\n                instance && instance.proxy\r\n            ]);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        // means unmount\r\n        value = null;\r\n    }\r\n    else if (isAsyncWrapper(vnode)) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    else if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n        value = vnode.component.exposed || vnode.component.proxy;\r\n    }\r\n    else {\r\n        value = vnode.el;\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, slotScopeIds, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized, slotScopeIds);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense, null);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    unmount(children[i], parentComponent, parentSuspense, true, optimized);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        shouldCacheAccess = false;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        shouldCacheAccess = true;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    for (let i = 0; i < globalMixins.length; i++) {\r\n        callHookWithMixinAndExtends(name, type, globalMixins[i], instance);\r\n    }\r\n    callHookWithMixinAndExtends(name, type, options, instance);\r\n}\r\nfunction callHookWithMixinAndExtends(name, type, options, instance) {\r\n    const { extends: base, mixins } = options;\r\n    const selfHook = options[name];\r\n    if (base) {\r\n        callHookWithMixinAndExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        for (let i = 0; i < mixins.length; i++) {\r\n            callHookWithMixinAndExtends(name, type, mixins[i], instance);\r\n        }\r\n    }\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    shouldCacheAccess = false;\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    shouldCacheAccess = true;\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return i.exposed ? i.exposed : i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.11\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            const current = style.display;\r\n            style.cssText = next;\r\n            // indicates that the `display` of the element is controlled by `v-show`,\r\n            // so we always keep the current `display` value regardless of the `style` value,\r\n            // thus handing over control to `v-show`.\r\n            if ('_vod' in el) {\r\n                style.display = current;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCustomElementCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const value = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return value;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is only respected when using the runtime compiler.` +\r\n                    `If you are using the runtime-only build, \\`isCustomElement\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead` +\r\n                    `- for example, via the \\`compilerOptions\\` option in vue-loader: https://vue-loader.vuejs.org/options.html#compileroptions.`);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","import { isString, hyphenate, extend, isObject, isArray, NO, makeMap, isSymbol, NOOP, EMPTY_OBJ, capitalize, camelize as camelize$1, PatchFlagNames, slotFlagsText, isOn, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (process.env.NODE_ENV !== 'production') || !true\r\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        : code;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [26 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    // transform errors\r\n    [27 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [28 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [29 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if.`,\r\n    [30 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [31 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [32 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [33 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [34 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [35 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [36 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [37 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [38 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [39 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [40 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [41 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [42 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [43 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [44 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [45 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [46 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [47 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [48 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`\r\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\r\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\r\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\r\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\r\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\r\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\r\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\r\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\r\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\r\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\r\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\r\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\r\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\r\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\r\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\r\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\r\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\r\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\r\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\r\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\r\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\r\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\r\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\r\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\r\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\r\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\r\nconst WITH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `withScopeId` : ``);\r\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\r\nconst UNREF = Symbol((process.env.NODE_ENV !== 'production') ? `unref` : ``);\r\nconst IS_REF = Symbol((process.env.NODE_ENV !== 'production') ? `isRef` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_SCOPE_ID]: `withScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(CREATE_BLOCK);\r\n        }\r\n        else {\r\n            context.helper(CREATE_VNODE);\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic, loc = locStub, constType = 0 /* NOT_CONSTANT */) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 /* CAN_STRINGIFY */ : constType\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst memberExpRE = /^[A-Za-z_$\\xA0-\\uFFFF][\\w$\\xA0-\\uFFFF]*(?:\\s*\\.\\s*[A-Za-z_$\\xA0-\\uFFFF][\\w$\\xA0-\\uFFFF]*|\\[[^\\]]+\\])*$/;\r\nconst isMemberExpression = (path) => {\r\n    if (!path)\r\n        return false;\r\n    return memberExpRE.test(path.trim());\r\n};\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.substr(offset, length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isBindKey(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isBindKey(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    const props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        node.props = propsWithInjection;\r\n    }\r\n    else {\r\n        node.arguments[2] = propsWithInjection;\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    return `_${type}_${name.replace(/[^\\w]/g, '_')}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    comments: false\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    for (const key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] = rawOptions[key] || defaultParserOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace management for more efficient output\r\n    // (same as v2 whitespace: 'condense')\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */ && mode !== 1 /* RCDATA */) {\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // If:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - the whitespace is adjacent to a comment, or:\r\n                    // - the whitespace is between two elements AND contains newline\r\n                    // Then the whitespace is ignored.\r\n                    if (!prev ||\r\n                        !next ||\r\n                        prev.type === 3 /* COMMENT */ ||\r\n                        next.type === 3 /* COMMENT */ ||\r\n                        (prev.type === 1 /* ELEMENT */ &&\r\n                            next.type === 1 /* ELEMENT */ &&\r\n                            /[\\r\\n]/.test(node.content))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, condensed consecutive whitespace inside the text\r\n                        // down to a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else {\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // also remove comment nodes in prod by default\r\n            if (!(process.env.NODE_ENV !== 'production') &&\r\n                node.type === 3 /* COMMENT */ &&\r\n                !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\n/**\r\n * Parse a tag (E.g. `<div id=a>`) with that type (start tag or end tag).\r\n */\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // check v-pre\r\n    if (!context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    const options = context.options;\r\n    if (!context.inVPre && !options.isCustomElement(tag)) {\r\n        const hasVIs = props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'is');\r\n        if (options.isNativeTag && !hasVIs) {\r\n            if (!options.isNativeTag(tag))\r\n                tagType = 1 /* COMPONENT */;\r\n        }\r\n        else if (hasVIs ||\r\n            isCoreComponent(tag) ||\r\n            (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n            /^[A-Z]/.test(tag) ||\r\n            tag === 'component') {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template' &&\r\n            props.some(p => {\r\n                return (p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name));\r\n            })) {\r\n            tagType = 3 /* TEMPLATE */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-|:|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        const dirName = match[1] ||\r\n            (startsWith(name, ':') ? 'bind' : startsWith(name, '@') ? 'on' : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.lastIndexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 26 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                }\r\n                content = content.substr(1, content.length - 2);\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                constType: isStatic\r\n                    ? 3 /* CAN_STRINGIFY */\r\n                    : 0 /* NOT_CONSTANT */,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // other values by `transformExpression` to make it eligible for hoisting.\r\n                constType: 0 /* NOT_CONSTANT */,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers: match[3] ? match[3].substr(1).split('.') : [],\r\n            loc\r\n        };\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            constType: 0 /* NOT_CONSTANT */,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = ['<', context.options.delimiters[0]];\r\n    if (mode === 3 /* CDATA */) {\r\n        endTokens.push(']]>');\r\n    }\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        rawText.indexOf('&') === -1) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                // TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.substr(2, tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, doNotHoistNode = false) {\r\n    let hasHoistedNode = false;\r\n    // Some transforms, e.g. transformAssetUrls from @vue/compiler-sfc, replaces\r\n    // static bindings with expressions. These expressions are guaranteed to be\r\n    // constant so they are still eligible for hoisting, but they are only\r\n    // available at runtime and therefore cannot be evaluated ahead of time.\r\n    // This is only a concern for pre-stringification (via transformHoist by\r\n    // @vue/compiler-dom), but doing it here allows us to perform only one full\r\n    // walk of the AST and allow `stringifyStatic` to stop walking as soon as its\r\n    // stringficiation threshold is met.\r\n    let canStringify = true;\r\n    const { children } = node;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            const constantType = doNotHoistNode\r\n                ? 0 /* NOT_CONSTANT */\r\n                : getConstantType(child, context);\r\n            if (constantType > 0 /* NOT_CONSTANT */) {\r\n                if (constantType < 3 /* CAN_STRINGIFY */) {\r\n                    canStringify = false;\r\n                }\r\n                if (constantType >= 2 /* CAN_HOIST */) {\r\n                    child.codegenNode.patchFlag =\r\n                        -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hasHoistedNode = true;\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        getGeneratedPropsConstantType(child, context) >=\r\n                            2 /* CAN_HOIST */) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */) {\r\n            const contentType = getConstantType(child.content, context);\r\n            if (contentType > 0) {\r\n                if (contentType < 3 /* CAN_STRINGIFY */) {\r\n                    canStringify = false;\r\n                }\r\n                if (contentType >= 2 /* CAN_HOIST */) {\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hasHoistedNode = true;\r\n                }\r\n            }\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            const isComponent = child.tagType === 1 /* COMPONENT */;\r\n            if (isComponent) {\r\n                context.scopes.vSlot++;\r\n            }\r\n            walk(child, context);\r\n            if (isComponent) {\r\n                context.scopes.vSlot--;\r\n            }\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (canStringify && hasHoistedNode && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n}\r\nfunction getConstantType(node, context) {\r\n    const { constantCache } = context;\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const cached = constantCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag) {\r\n                let returnType = 3 /* CAN_STRINGIFY */;\r\n                // Element itself has no patch flag. However we still need to check:\r\n                // 1. Even for a node with no patch flag, it is possible for it to contain\r\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n                // injected keys or cached event handlers. Therefore we need to always\r\n                // check the codegenNode's props to be sure.\r\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n                if (generatedPropsType === 0 /* NOT_CONSTANT */) {\r\n                    constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                if (generatedPropsType < returnType) {\r\n                    returnType = generatedPropsType;\r\n                }\r\n                // 2. its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getConstantType(node.children[i], context);\r\n                    if (childType === 0 /* NOT_CONSTANT */) {\r\n                        constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                        return 0 /* NOT_CONSTANT */;\r\n                    }\r\n                    if (childType < returnType) {\r\n                        returnType = childType;\r\n                    }\r\n                }\r\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n                // type, check if any of the props can cause the type to be lowered\r\n                // we can skip can_patch because it's guaranteed by the absence of a\r\n                // patchFlag.\r\n                if (returnType > 1 /* CAN_SKIP_PATCH */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind' && p.exp) {\r\n                            const expType = getConstantType(p.exp, context);\r\n                            if (expType === 0 /* NOT_CONSTANT */) {\r\n                                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                                return 0 /* NOT_CONSTANT */;\r\n                            }\r\n                            if (expType < returnType) {\r\n                                returnType = expType;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // static then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    context.removeHelper(OPEN_BLOCK);\r\n                    context.removeHelper(CREATE_BLOCK);\r\n                    codegenNode.isBlock = false;\r\n                    context.helper(CREATE_VNODE);\r\n                }\r\n                constantCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return 3 /* CAN_STRINGIFY */;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return 0 /* NOT_CONSTANT */;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return getConstantType(node.content, context);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.constType;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            let returnType = 3 /* CAN_STRINGIFY */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getConstantType(child, context);\r\n                if (childType === 0 /* NOT_CONSTANT */) {\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                else if (childType < returnType) {\r\n                    returnType = childType;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return 0 /* NOT_CONSTANT */;\r\n    }\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n    let returnType = 3 /* CAN_STRINGIFY */;\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            const keyType = getConstantType(key, context);\r\n            if (keyType === 0 /* NOT_CONSTANT */) {\r\n                return keyType;\r\n            }\r\n            if (keyType < returnType) {\r\n                returnType = keyType;\r\n            }\r\n            if (value.type !== 4 /* SIMPLE_EXPRESSION */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const valueType = getConstantType(value, context);\r\n            if (valueType === 0 /* NOT_CONSTANT */) {\r\n                return valueType;\r\n            }\r\n            if (valueType < returnType) {\r\n                returnType = valueType;\r\n            }\r\n        }\r\n    }\r\n    return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError }) {\r\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\r\n    const context = {\r\n        // options\r\n        selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        slotted,\r\n        ssr,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        inline,\r\n        isTS,\r\n        onError,\r\n        // state\r\n        root,\r\n        helpers: new Map(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: [],\r\n        constantCache: new Map(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        // methods\r\n        helper(name) {\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name, count + 1);\r\n            return name;\r\n        },\r\n        removeHelper(name) {\r\n            const count = context.helpers.get(name);\r\n            if (count) {\r\n                const currentCount = count - 1;\r\n                if (!currentCount) {\r\n                    context.helpers.delete(name);\r\n                }\r\n                else {\r\n                    context.helpers.set(name, currentCount);\r\n                }\r\n            }\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n        },\r\n        removeIdentifiers(exp) {\r\n        },\r\n        hoist(exp) {\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* CAN_HOIST */);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(++context.cached, exp, isVNode);\r\n        }\r\n    };\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers.keys()];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = context.imports;\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper, removeHelper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                if (!codegenNode.isBlock) {\r\n                    removeHelper(CREATE_VNODE);\r\n                    codegenNode.isBlock = true;\r\n                    helper(OPEN_BLOCK);\r\n                    helper(CREATE_BLOCK);\r\n                }\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n        let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n        // check if the fragment actually contains a single valid child with\r\n        // the rest being comments\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n            patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n            patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n        }\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssr = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssr,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    // preambles\r\n    // in setup() inline mode, the preamble is generated in a sub context\r\n    // and returned separately.\r\n    const preambleContext = context;\r\n    {\r\n        genFunctionPreamble(ast, preambleContext);\r\n    }\r\n    // enter render function\r\n    const functionName = ssr ? `ssrRender` : `render`;\r\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\r\n    const signature = args.join(', ');\r\n    {\r\n        push(`function ${functionName}(${signature}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n                .join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        preamble: ``,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName } = context;\r\n    const VueBinding = runtimeGlobalName;\r\n    const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline }) {\r\n    const resolver = helper(type === 'component' ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        let id = assets[i];\r\n        // potential component implicit self-reference inferred from SFC filename\r\n        const maybeSelfReference = id.endsWith('__self');\r\n        if (maybeSelfReference) {\r\n            id = id.slice(0, -6);\r\n        }\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    newline();\r\n    hoists.forEach((exp, i) => {\r\n        if (exp) {\r\n            push(`const _hoisted_${i + 1} = `);\r\n            genNode(exp, context);\r\n            newline();\r\n        }\r\n    });\r\n    context.pure = false;\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (((process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        // SSR only types\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            break;\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { push, helper, pure } = context;\r\n        if (pure) {\r\n            push(PURE_ANNOTATION);\r\n        }\r\n        push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n    }\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(helper(isBlock ? CREATE_BLOCK : CREATE_VNODE) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (((process.env.NODE_ENV !== 'production')) &&\r\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent, scopeId, mode } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        // wrap slot functions with owner context\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if (isSlot) {\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\n\n// these keywords should not appear inside expressions, but operators like\r\n// typeof, instanceof and in are allowed\r\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\r\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\r\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\r\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\r\n        .split(',')\r\n        .join('\\\\b|\\\\b') +\r\n    '\\\\b');\r\n// strip strings in expressions\r\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\r\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\r\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\r\n    const exp = node.content;\r\n    // empty expressions are validated per-directive since some directives\r\n    // do allow empty expressions.\r\n    if (!exp.trim()) {\r\n        return;\r\n    }\r\n    try {\r\n        new Function(asRawStatements\r\n            ? ` ${exp} `\r\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\r\n    }\r\n    catch (e) {\r\n        let message = e.message;\r\n        const keywordMatch = exp\r\n            .replace(stripStringRE, '')\r\n            .match(prohibitedKeywordRE);\r\n        if (keywordMatch) {\r\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\r\n        }\r\n        context.onError(createCompilerError(43 /* X_INVALID_EXPRESSION */, node.loc, undefined, message));\r\n    }\r\n}\n\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !true check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false) {\r\n    {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            // simple in-browser validation (same logic in 2.x)\r\n            validateBrowserExpression(node, context, asParams, asRawStatements);\r\n        }\r\n        return node;\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(27 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\r\n        validateBrowserExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if ((process.env.NODE_ENV !== 'production') && comments.length) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                if ((process.env.NODE_ENV !== 'production') || !true) {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(28 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(29 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ && !findDir(node, 'for')\r\n            ? node.children\r\n            : [node],\r\n        userKey: findProp(node, `key`)\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper, removeHelper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n            let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n            // check if the fragment actually contains a single valid child with\r\n            // the rest being comments\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n                patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n                patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n            }\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const vnodeCall = firstChild\r\n            .codegenNode;\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */ && !vnodeCall.isBlock) {\r\n            removeHelper(CREATE_VNODE);\r\n            vnodeCall.isBlock = true;\r\n            helper(OPEN_BLOCK);\r\n            helper(CREATE_BLOCK);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return vnodeCall;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            (exp.isStatic !== branchExp.isStatic ||\r\n                exp.content !== branchExp.content)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const keyProp = findProp(node, `key`);\r\n        const keyProperty = keyProp\r\n            ? createObjectProperty(`key`, keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp)\r\n            : null;\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const isTemplate = isTemplateNode(node);\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(32 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* STABLE_FRAGMENT */ +\r\n                    ((process.env.NODE_ENV !== 'production')\r\n                        ? ` /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`\r\n                        : ``), undefined, undefined, true);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(CREATE_BLOCK);\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(CREATE_VNODE);\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(CREATE_BLOCK);\r\n                }\r\n                else {\r\n                    helper(CREATE_VNODE);\r\n                }\r\n            }\r\n            renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(30 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        validateBrowserExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim()\r\n        .replace(stripParensRE, '')\r\n        .trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if ((process.env.NODE_ENV !== 'production') && true) {\r\n                validateBrowserExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if ((process.env.NODE_ENV !== 'production') && true) {\r\n                    validateBrowserExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }) {\r\n    const params = [];\r\n    if (value) {\r\n        params.push(value);\r\n    }\r\n    if (key) {\r\n        if (!value) {\r\n            params.push(createSimpleExpression(`_`, false));\r\n        }\r\n        params.push(key);\r\n    }\r\n    if (index) {\r\n        if (!key) {\r\n            if (!value) {\r\n                params.push(createSimpleExpression(`_`, false));\r\n            }\r\n            params.push(createSimpleExpression(`__`, false));\r\n        }\r\n        params.push(index);\r\n    }\r\n    return params;\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            vSlot.exp;\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    const buildDefaultSlotProperty = (props, children) => createObjectProperty(`default`, buildSlotFn(props, children, loc));\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(36 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(29 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(31 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(37 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(38 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* ELEMENT */:\r\n                if (child.tagType === 2 /* SLOT */ ||\r\n                    (child.tagType === 0 /* ELEMENT */ &&\r\n                        hasForwardedSlots(child.children))) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* IF_BRANCH */:\r\n            case 11 /* FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        node = context.currentNode;\r\n        if (!(node.type === 1 /* ELEMENT */ &&\r\n            (node.tagType === 0 /* ELEMENT */ ||\r\n                node.tagType === 1 /* COMPONENT */))) {\r\n            return;\r\n        }\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        const vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' ||\r\n                    tag === 'foreignObject' ||\r\n                    // #938: elements with dynamic keys should be forced into blocks\r\n                    findProp(node, 'key', true)));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\r\n                    context.onError(createCompilerError(44 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild &&\r\n                    getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            else {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    const { tag } = node;\r\n    // 1. dynamic component\r\n    const isProp = isComponentTag(tag)\r\n        ? findProp(node, 'is')\r\n        : findDir(node, 'is');\r\n    if (isProp) {\r\n        const exp = isProp.type === 6 /* ATTRIBUTE */\r\n            ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n            : isProp.exp;\r\n        if (exp) {\r\n            return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                exp\r\n            ]);\r\n        }\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // so we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 5. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction buildProps(node, context, props = node.props, ssr = false) {\r\n    const { tag, loc: elementLoc } = node;\r\n    const isComponent = node.tagType === 1 /* COMPONENT */;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (!isComponent &&\r\n                isEventHandler &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    getConstantType(value, context) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class' && !isComponent) {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style' && !isComponent) {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            let isStatic = true;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            // skip :is on <component>\r\n            if (name === 'is' && isComponentTag(tag)) {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isBind = name === 'bind';\r\n            const isOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(39 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once - it is handled by its dedicated transform.\r\n            if (name === 'once') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isBind && isComponentTag(tag) && isBindKey(arg, 'is'))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isOn && ssr) {\r\n                continue;\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isBind || isOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isBind) {\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isBind\r\n                        ? 33 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 34 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if ((patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || name.startsWith('on')) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        // built-in directive with runtime\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        {\r\n            // inject statement for resolving directive\r\n            context.helper(RESOLVE_DIRECTIVE);\r\n            context.directives.add(dir.name);\r\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n        }\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n    return tag[0].toLowerCase() + tag.slice(1) === 'component';\r\n}\n\n(process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName\r\n        ];\r\n        if (slotProps) {\r\n            slotArgs.push(slotProps);\r\n        }\r\n        if (children.length) {\r\n            if (!slotProps) {\r\n                slotArgs.push(`{}`);\r\n            }\r\n            slotArgs.push(createFunctionExpression([], children, false, false, loc));\r\n        }\r\n        if (context.scopeId && !context.slotted) {\r\n            if (!slotProps) {\r\n                slotArgs.push(`{}`);\r\n            }\r\n            if (!children.length) {\r\n                slotArgs.push(`undefined`);\r\n            }\r\n            slotArgs.push(`true`);\r\n        }\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    const nonNameProps = [];\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.value) {\r\n                if (p.name === 'name') {\r\n                    slotName = JSON.stringify(p.value.content);\r\n                }\r\n                else {\r\n                    p.name = camelize(p.name);\r\n                    nonNameProps.push(p);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (p.name === 'bind' && isBindKey(p.arg, 'name')) {\r\n                if (p.exp)\r\n                    slotName = p.exp;\r\n            }\r\n            else {\r\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n                    p.arg.content = camelize(p.arg.content);\r\n                }\r\n                nonNameProps.push(p);\r\n            }\r\n        }\r\n    }\r\n    if (nonNameProps.length > 0) {\r\n        const { props, directives } = buildProps(node, context, nonNameProps);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(35 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^\\s*function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(34 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            const rawName = arg.content;\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            eventName = createSimpleExpression(toHandlerKey(camelize$1(rawName)), true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? `$event`\r\n                    : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .prop is no longer necessary due to new patch behavior\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize$1(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(33 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */)))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* TEXT */ +\r\n                            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[1 /* TEXT */]} */` : ``));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node)) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(40 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const rawExp = exp.loc.source;\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : rawExp;\r\n    // im SFC <script setup> inline mode, the exp may have been transformed into\r\n    // _unref(exp)\r\n    context.bindingMetadata[rawExp];\r\n    const maybeRef = !true    /* SETUP_CONST */;\r\n    if (!isMemberExpression(expString) && !maybeRef) {\r\n        context.onError(createCompilerError(41 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    let assignmentExp;\r\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n    {\r\n        assignmentExp = createCompoundExpression([\r\n            `${eventArg} => (`,\r\n            exp,\r\n            ` = $event)`\r\n        ]);\r\n    }\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, assignmentExp)\r\n    ];\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* CAN_HOIST */)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformFor,\r\n            ...((process.env.NODE_ENV !== 'production')\r\n                    ? [transformExpression]\r\n                    : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    /* istanbul ignore if */\r\n    {\r\n        if (options.prefixIdentifiers === true) {\r\n            onError(createCompilerError(45 /* X_PREFIX_ID_NOT_SUPPORTED */));\r\n        }\r\n        else if (isModuleMode) {\r\n            onError(createCompilerError(46 /* X_MODULE_MODE_NOT_SUPPORTED */));\r\n        }\r\n    }\r\n    const prefixIdentifiers = !true ;\r\n    if (options.cacheHandlers) {\r\n        onError(createCompilerError(47 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(48 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, IS_REF, KEEP_ALIVE, MERGE_PROPS, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_SCOPE_ID, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildProps, buildSlots, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBindKey, isBuiltInType, isCoreComponent, isMemberExpression, isSimpleIdentifier, isSlotOutlet, isStaticExp, isTemplateNode, isText, isVSlot, locStub, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode };\n","import { registerRuntimeHelpers, isBuiltInType, createSimpleExpression, createCompilerError, createObjectProperty, createCallExpression, TO_DISPLAY_STRING, transformModel as transformModel$1, findProp, hasDynamicKeyVBind, transformOn as transformOn$1, createCompoundExpression, isStaticExp, noopDirectiveTransform, baseCompile, baseParse } from '@vue/compiler-core';\nexport * from '@vue/compiler-core';\nimport { isVoidTag, isHTMLTag, isSVGTag, makeMap, parseStringStyle, capitalize, extend } from '@vue/shared';\n\nconst V_MODEL_RADIO = Symbol((process.env.NODE_ENV !== 'production') ? `vModelRadio` : ``);\r\nconst V_MODEL_CHECKBOX = Symbol((process.env.NODE_ENV !== 'production') ? `vModelCheckbox` : ``);\r\nconst V_MODEL_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelText` : ``);\r\nconst V_MODEL_SELECT = Symbol((process.env.NODE_ENV !== 'production') ? `vModelSelect` : ``);\r\nconst V_MODEL_DYNAMIC = Symbol((process.env.NODE_ENV !== 'production') ? `vModelDynamic` : ``);\r\nconst V_ON_WITH_MODIFIERS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnModifiersGuard` : ``);\r\nconst V_ON_WITH_KEYS = Symbol((process.env.NODE_ENV !== 'production') ? `vOnKeysGuard` : ``);\r\nconst V_SHOW = Symbol((process.env.NODE_ENV !== 'production') ? `vShow` : ``);\r\nconst TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `Transition` : ``);\r\nconst TRANSITION_GROUP = Symbol((process.env.NODE_ENV !== 'production') ? `TransitionGroup` : ``);\r\nregisterRuntimeHelpers({\r\n    [V_MODEL_RADIO]: `vModelRadio`,\r\n    [V_MODEL_CHECKBOX]: `vModelCheckbox`,\r\n    [V_MODEL_TEXT]: `vModelText`,\r\n    [V_MODEL_SELECT]: `vModelSelect`,\r\n    [V_MODEL_DYNAMIC]: `vModelDynamic`,\r\n    [V_ON_WITH_MODIFIERS]: `withModifiers`,\r\n    [V_ON_WITH_KEYS]: `withKeys`,\r\n    [V_SHOW]: `vShow`,\r\n    [TRANSITION]: `Transition`,\r\n    [TRANSITION_GROUP]: `TransitionGroup`\r\n});\n\n/* eslint-disable no-restricted-globals */\r\nlet decoder;\r\nfunction decodeHtmlBrowser(raw) {\r\n    (decoder || (decoder = document.createElement('div'))).innerHTML = raw;\r\n    return decoder.textContent;\r\n}\n\nconst isRawTextContainer = /*#__PURE__*/ makeMap('style,iframe,script,noscript', true);\r\nconst parserOptions = {\r\n    isVoidTag,\r\n    isNativeTag: tag => isHTMLTag(tag) || isSVGTag(tag),\r\n    isPreTag: tag => tag === 'pre',\r\n    decodeEntities: decodeHtmlBrowser ,\r\n    isBuiltInComponent: (tag) => {\r\n        if (isBuiltInType(tag, `Transition`)) {\r\n            return TRANSITION;\r\n        }\r\n        else if (isBuiltInType(tag, `TransitionGroup`)) {\r\n            return TRANSITION_GROUP;\r\n        }\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\r\n    getNamespace(tag, parent) {\r\n        let ns = parent ? parent.ns : 0 /* HTML */;\r\n        if (parent && ns === 2 /* MATH_ML */) {\r\n            if (parent.tag === 'annotation-xml') {\r\n                if (tag === 'svg') {\r\n                    return 1 /* SVG */;\r\n                }\r\n                if (parent.props.some(a => a.type === 6 /* ATTRIBUTE */ &&\r\n                    a.name === 'encoding' &&\r\n                    a.value != null &&\r\n                    (a.value.content === 'text/html' ||\r\n                        a.value.content === 'application/xhtml+xml'))) {\r\n                    ns = 0 /* HTML */;\r\n                }\r\n            }\r\n            else if (/^m(?:[ions]|text)$/.test(parent.tag) &&\r\n                tag !== 'mglyph' &&\r\n                tag !== 'malignmark') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        else if (parent && ns === 1 /* SVG */) {\r\n            if (parent.tag === 'foreignObject' ||\r\n                parent.tag === 'desc' ||\r\n                parent.tag === 'title') {\r\n                ns = 0 /* HTML */;\r\n            }\r\n        }\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'svg') {\r\n                return 1 /* SVG */;\r\n            }\r\n            if (tag === 'math') {\r\n                return 2 /* MATH_ML */;\r\n            }\r\n        }\r\n        return ns;\r\n    },\r\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments\r\n    getTextMode({ tag, ns }) {\r\n        if (ns === 0 /* HTML */) {\r\n            if (tag === 'textarea' || tag === 'title') {\r\n                return 1 /* RCDATA */;\r\n            }\r\n            if (isRawTextContainer(tag)) {\r\n                return 2 /* RAWTEXT */;\r\n            }\r\n        }\r\n        return 0 /* DATA */;\r\n    }\r\n};\n\n// Parse inline CSS strings for static style attributes into an object.\r\n// This is a NodeTransform since it works on the static `style` attribute and\r\n// converts it into a dynamic equivalent:\r\n// style=\"color: red\" -> :style='{ \"color\": \"red\" }'\r\n// It is then processed by `transformElement` and included in the generated\r\n// props.\r\nconst transformStyle = node => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((p, i) => {\r\n            if (p.type === 6 /* ATTRIBUTE */ && p.name === 'style' && p.value) {\r\n                // replace p with an expression node\r\n                node.props[i] = {\r\n                    type: 7 /* DIRECTIVE */,\r\n                    name: `bind`,\r\n                    arg: createSimpleExpression(`style`, true, p.loc),\r\n                    exp: parseInlineCSS(p.value.content, p.loc),\r\n                    modifiers: [],\r\n                    loc: p.loc\r\n                };\r\n            }\r\n        });\r\n    }\r\n};\r\nconst parseInlineCSS = (cssText, loc) => {\r\n    const normalized = parseStringStyle(cssText);\r\n    return createSimpleExpression(JSON.stringify(normalized), false, loc, 3 /* CAN_STRINGIFY */);\r\n};\n\nfunction createDOMCompilerError(code, loc) {\r\n    return createCompilerError(code, loc, (process.env.NODE_ENV !== 'production') || !true ? DOMErrorMessages : undefined);\r\n}\r\nconst DOMErrorMessages = {\r\n    [49 /* X_V_HTML_NO_EXPRESSION */]: `v-html is missing expression.`,\r\n    [50 /* X_V_HTML_WITH_CHILDREN */]: `v-html will override element children.`,\r\n    [51 /* X_V_TEXT_NO_EXPRESSION */]: `v-text is missing expression.`,\r\n    [52 /* X_V_TEXT_WITH_CHILDREN */]: `v-text will override element children.`,\r\n    [53 /* X_V_MODEL_ON_INVALID_ELEMENT */]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\r\n    [54 /* X_V_MODEL_ARG_ON_ELEMENT */]: `v-model argument is not supported on plain elements.`,\r\n    [55 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\r\n    [56 /* X_V_MODEL_UNNECESSARY_VALUE */]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\r\n    [57 /* X_V_SHOW_NO_EXPRESSION */]: `v-show is missing expression.`,\r\n    [58 /* X_TRANSITION_INVALID_CHILDREN */]: `<Transition> expects exactly one child element or component.`,\r\n    [59 /* X_IGNORED_SIDE_EFFECT_TAG */]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\r\n};\n\nconst transformVHtml = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(49 /* X_V_HTML_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(50 /* X_V_HTML_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformVText = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(51 /* X_V_TEXT_NO_EXPRESSION */, loc));\r\n    }\r\n    if (node.children.length) {\r\n        context.onError(createDOMCompilerError(52 /* X_V_TEXT_WITH_CHILDREN */, loc));\r\n        node.children.length = 0;\r\n    }\r\n    return {\r\n        props: [\r\n            createObjectProperty(createSimpleExpression(`textContent`, true), exp\r\n                ? createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc)\r\n                : createSimpleExpression('', true))\r\n        ]\r\n    };\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const baseResult = transformModel$1(dir, node, context);\r\n    // base transform has errors OR component v-model (only need props)\r\n    if (!baseResult.props.length || node.tagType === 1 /* COMPONENT */) {\r\n        return baseResult;\r\n    }\r\n    if (dir.arg) {\r\n        context.onError(createDOMCompilerError(54 /* X_V_MODEL_ARG_ON_ELEMENT */, dir.arg.loc));\r\n    }\r\n    function checkDuplicatedValue() {\r\n        const value = findProp(node, 'value');\r\n        if (value) {\r\n            context.onError(createDOMCompilerError(56 /* X_V_MODEL_UNNECESSARY_VALUE */, value.loc));\r\n        }\r\n    }\r\n    const { tag } = node;\r\n    const isCustomElement = context.isCustomElement(tag);\r\n    if (tag === 'input' ||\r\n        tag === 'textarea' ||\r\n        tag === 'select' ||\r\n        isCustomElement) {\r\n        let directiveToUse = V_MODEL_TEXT;\r\n        let isInvalidType = false;\r\n        if (tag === 'input' || isCustomElement) {\r\n            const type = findProp(node, `type`);\r\n            if (type) {\r\n                if (type.type === 7 /* DIRECTIVE */) {\r\n                    // :type=\"foo\"\r\n                    directiveToUse = V_MODEL_DYNAMIC;\r\n                }\r\n                else if (type.value) {\r\n                    switch (type.value.content) {\r\n                        case 'radio':\r\n                            directiveToUse = V_MODEL_RADIO;\r\n                            break;\r\n                        case 'checkbox':\r\n                            directiveToUse = V_MODEL_CHECKBOX;\r\n                            break;\r\n                        case 'file':\r\n                            isInvalidType = true;\r\n                            context.onError(createDOMCompilerError(55 /* X_V_MODEL_ON_FILE_INPUT_ELEMENT */, dir.loc));\r\n                            break;\r\n                        default:\r\n                            // text type\r\n                            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else if (hasDynamicKeyVBind(node)) {\r\n                // element has bindings with dynamic keys, which can possibly contain\r\n                // \"type\".\r\n                directiveToUse = V_MODEL_DYNAMIC;\r\n            }\r\n            else {\r\n                // text type\r\n                (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n            }\r\n        }\r\n        else if (tag === 'select') {\r\n            directiveToUse = V_MODEL_SELECT;\r\n        }\r\n        else {\r\n            // textarea\r\n            (process.env.NODE_ENV !== 'production') && checkDuplicatedValue();\r\n        }\r\n        // inject runtime directive\r\n        // by returning the helper symbol via needRuntime\r\n        // the import will replaced a resolveDirective call.\r\n        if (!isInvalidType) {\r\n            baseResult.needRuntime = context.helper(directiveToUse);\r\n        }\r\n    }\r\n    else {\r\n        context.onError(createDOMCompilerError(53 /* X_V_MODEL_ON_INVALID_ELEMENT */, dir.loc));\r\n    }\r\n    // native vmodel doesn't need the `modelValue` props since they are also\r\n    // passed to the runtime as `binding.value`. removing it reduces code size.\r\n    baseResult.props = baseResult.props.filter(p => !(p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n        p.key.content === 'modelValue'));\r\n    return baseResult;\r\n};\n\nconst isEventOptionModifier = /*#__PURE__*/ makeMap(`passive,once,capture`);\r\nconst isNonKeyModifier = /*#__PURE__*/ makeMap(\r\n// event propagation management\r\n`stop,prevent,self,` +\r\n    // system modifiers + exact\r\n    `ctrl,shift,alt,meta,exact,` +\r\n    // mouse\r\n    `middle`);\r\n// left & right could be mouse or key modifiers based on event type\r\nconst maybeKeyModifier = /*#__PURE__*/ makeMap('left,right');\r\nconst isKeyboardEvent = /*#__PURE__*/ makeMap(`onkeyup,onkeydown,onkeypress`, true);\r\nconst resolveModifiers = (key, modifiers) => {\r\n    const keyModifiers = [];\r\n    const nonKeyModifiers = [];\r\n    const eventOptionModifiers = [];\r\n    for (let i = 0; i < modifiers.length; i++) {\r\n        const modifier = modifiers[i];\r\n        if (isEventOptionModifier(modifier)) {\r\n            // eventOptionModifiers: modifiers for addEventListener() options,\r\n            // e.g. .passive & .capture\r\n            eventOptionModifiers.push(modifier);\r\n        }\r\n        else {\r\n            // runtimeModifiers: modifiers that needs runtime guards\r\n            if (maybeKeyModifier(modifier)) {\r\n                if (isStaticExp(key)) {\r\n                    if (isKeyboardEvent(key.content)) {\r\n                        keyModifiers.push(modifier);\r\n                    }\r\n                    else {\r\n                        nonKeyModifiers.push(modifier);\r\n                    }\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n            }\r\n            else {\r\n                if (isNonKeyModifier(modifier)) {\r\n                    nonKeyModifiers.push(modifier);\r\n                }\r\n                else {\r\n                    keyModifiers.push(modifier);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        keyModifiers,\r\n        nonKeyModifiers,\r\n        eventOptionModifiers\r\n    };\r\n};\r\nconst transformClick = (key, event) => {\r\n    const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === 'onclick';\r\n    return isStaticClick\r\n        ? createSimpleExpression(event, true)\r\n        : key.type !== 4 /* SIMPLE_EXPRESSION */\r\n            ? createCompoundExpression([\r\n                `(`,\r\n                key,\r\n                `) === \"onClick\" ? \"${event}\" : (`,\r\n                key,\r\n                `)`\r\n            ])\r\n            : key;\r\n};\r\nconst transformOn = (dir, node, context) => {\r\n    return transformOn$1(dir, node, context, baseResult => {\r\n        const { modifiers } = dir;\r\n        if (!modifiers.length)\r\n            return baseResult;\r\n        let { key, value: handlerExp } = baseResult.props[0];\r\n        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers);\r\n        // normalize click.right and click.middle since they don't actually fire\r\n        if (nonKeyModifiers.includes('right')) {\r\n            key = transformClick(key, `onContextmenu`);\r\n        }\r\n        if (nonKeyModifiers.includes('middle')) {\r\n            key = transformClick(key, `onMouseup`);\r\n        }\r\n        if (nonKeyModifiers.length) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\r\n                handlerExp,\r\n                JSON.stringify(nonKeyModifiers)\r\n            ]);\r\n        }\r\n        if (keyModifiers.length &&\r\n            // if event name is dynamic, always wrap with keys guard\r\n            (!isStaticExp(key) || isKeyboardEvent(key.content))) {\r\n            handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\r\n                handlerExp,\r\n                JSON.stringify(keyModifiers)\r\n            ]);\r\n        }\r\n        if (eventOptionModifiers.length) {\r\n            const modifierPostfix = eventOptionModifiers.map(capitalize).join('');\r\n            key = isStaticExp(key)\r\n                ? createSimpleExpression(`${key.content}${modifierPostfix}`, true)\r\n                : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\r\n        }\r\n        return {\r\n            props: [createObjectProperty(key, handlerExp)]\r\n        };\r\n    });\r\n};\n\nconst transformShow = (dir, node, context) => {\r\n    const { exp, loc } = dir;\r\n    if (!exp) {\r\n        context.onError(createDOMCompilerError(57 /* X_V_SHOW_NO_EXPRESSION */, loc));\r\n    }\r\n    return {\r\n        props: [],\r\n        needRuntime: context.helper(V_SHOW)\r\n    };\r\n};\n\nconst warnTransitionChildren = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 1 /* COMPONENT */) {\r\n        const component = context.isBuiltInComponent(node.tag);\r\n        if (component === TRANSITION) {\r\n            return () => {\r\n                if (node.children.length && hasMultipleChildren(node)) {\r\n                    context.onError(createDOMCompilerError(58 /* X_TRANSITION_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction hasMultipleChildren(node) {\r\n    // #1352 filter out potential comment nodes.\r\n    const children = (node.children = node.children.filter(c => c.type !== 3 /* COMMENT */));\r\n    const child = children[0];\r\n    return (children.length !== 1 ||\r\n        child.type === 11 /* FOR */ ||\r\n        (child.type === 9 /* IF */ && child.branches.some(hasMultipleChildren)));\r\n}\n\nconst ignoreSideEffectTags = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        (node.tag === 'script' || node.tag === 'style')) {\r\n        context.onError(createDOMCompilerError(59 /* X_IGNORED_SIDE_EFFECT_TAG */, node.loc));\r\n        context.removeNode();\r\n    }\r\n};\n\nconst DOMNodeTransforms = [\r\n    transformStyle,\r\n    ...((process.env.NODE_ENV !== 'production') ? [warnTransitionChildren] : [])\r\n];\r\nconst DOMDirectiveTransforms = {\r\n    cloak: noopDirectiveTransform,\r\n    html: transformVHtml,\r\n    text: transformVText,\r\n    model: transformModel,\r\n    on: transformOn,\r\n    show: transformShow\r\n};\r\nfunction compile(template, options = {}) {\r\n    return baseCompile(template, extend({}, parserOptions, options, {\r\n        nodeTransforms: [\r\n            // ignore <script> and <tag>\r\n            // this is not put inside DOMNodeTransforms because that list is used\r\n            // by compiler-ssr to generate vnode fallback branches\r\n            ignoreSideEffectTags,\r\n            ...DOMNodeTransforms,\r\n            ...(options.nodeTransforms || [])\r\n        ],\r\n        directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),\r\n        transformHoist: null \r\n    }));\r\n}\r\nfunction parse(template, options = {}) {\r\n    return baseParse(template, extend({}, parserOptions, options));\r\n}\n\nexport { DOMDirectiveTransforms, DOMNodeTransforms, TRANSITION, TRANSITION_GROUP, V_MODEL_CHECKBOX, V_MODEL_DYNAMIC, V_MODEL_RADIO, V_MODEL_SELECT, V_MODEL_TEXT, V_ON_WITH_KEYS, V_ON_WITH_MODIFIERS, V_SHOW, compile, createDOMCompilerError, parse, parserOptions, transformStyle };\n","import * as runtimeDom from '@vue/runtime-dom';\nimport { initCustomFormatter, warn, registerRuntimeCompiler } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { compile } from '@vue/compiler-dom';\nimport { isString, NOOP, extend, generateCodeFrame } from '@vue/shared';\n\nfunction initDev() {\r\n    {\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry is the \"full-build\" that includes both the runtime\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    initDev();\r\n}\r\nconst compileCache = Object.create(null);\r\nfunction compileToFunction(template, options) {\r\n    if (!isString(template)) {\r\n        if (template.nodeType) {\r\n            template = template.innerHTML;\r\n        }\r\n        else {\r\n            (process.env.NODE_ENV !== 'production') && warn(`invalid template option: `, template);\r\n            return NOOP;\r\n        }\r\n    }\r\n    const key = template;\r\n    const cached = compileCache[key];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    if (template[0] === '#') {\r\n        const el = document.querySelector(template);\r\n        if ((process.env.NODE_ENV !== 'production') && !el) {\r\n            warn(`Template element not found or is empty: ${template}`);\r\n        }\r\n        // __UNSAFE__\r\n        // Reason: potential execution of JS expressions in in-DOM template.\r\n        // The user must make sure the in-DOM template is trusted. If it's rendered\r\n        // by the server, the template should not contain any user data.\r\n        template = el ? el.innerHTML : ``;\r\n    }\r\n    const { code } = compile(template, extend({\r\n        hoistStatic: true,\r\n        onError(err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const message = `Template compilation error: ${err.message}`;\r\n                const codeFrame = err.loc &&\r\n                    generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\r\n                warn(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n            }\r\n            else {\r\n                /* istanbul ignore next */\r\n                throw err;\r\n            }\r\n        }\r\n    }, options));\r\n    // The wildcard import results in a huge object with every export\r\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n    // In the global build we know `Vue` is available globally so we can avoid\r\n    // the wildcard object.\r\n    const render = (new Function('Vue', code)(runtimeDom));\r\n    render._rc = true;\r\n    return (compileCache[key] = render);\r\n}\r\nregisterRuntimeCompiler(compileToFunction);\n\nexport { compileToFunction as compile };\n","// src/index.ts\nimport {\n  defineComponent,\n  inject,\n  onBeforeUnmount,\n  ref,\n  watchEffect\n} from \"vue\";\n\n// src/constants.ts\nvar PROVIDE_KEY = `usehead`;\nvar HEAD_COUNT_KEY = `head:count`;\nvar HEAD_ATTRS_KEY = `data-head-attrs`;\nvar SELF_CLOSING_TAGS = [\"meta\", \"link\", \"base\"];\n\n// src/create-element.ts\nvar createElement = (tag, attrs, document) => {\n  const el = document.createElement(tag);\n  for (const key of Object.keys(attrs)) {\n    let value = attrs[key];\n    if (key === \"key\" || value === false) {\n      continue;\n    }\n    if (key === \"children\") {\n      el.textContent = value;\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n  return el;\n};\n\n// src/stringify-attrs.ts\nvar htmlEscape = (str) => str.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#39;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\nvar stringifyAttrs = (attributes) => {\n  const handledAttributes = [];\n  for (let [key, value] of Object.entries(attributes)) {\n    if (key === \"children\" || key === \"key\") {\n      continue;\n    }\n    if (value === false || value == null) {\n      continue;\n    }\n    let attribute = htmlEscape(key);\n    if (value !== true) {\n      attribute += `=\"${htmlEscape(String(value))}\"`;\n    }\n    handledAttributes.push(attribute);\n  }\n  return handledAttributes.length > 0 ? \" \" + handledAttributes.join(\" \") : \"\";\n};\n\n// src/index.ts\nvar getTagKey = (props) => {\n  if (props.key !== void 0) {\n    return {name: \"key\", value: props.key};\n  }\n  if (props.name !== void 0) {\n    return {name: \"name\", value: props.name};\n  }\n  if (props.property !== void 0) {\n    return {\n      name: \"property\",\n      value: props.property\n    };\n  }\n};\nvar injectHead = () => {\n  const head = inject(PROVIDE_KEY);\n  if (!head) {\n    throw new Error(`You may forget to apply app.use(head)`);\n  }\n  return head;\n};\nvar acceptFields = [\n  \"title\",\n  \"meta\",\n  \"link\",\n  \"base\",\n  \"style\",\n  \"script\",\n  \"htmlAttrs\",\n  \"bodyAttrs\"\n];\nvar headObjToTags = (obj) => {\n  const tags = [];\n  for (const key of Object.keys(obj)) {\n    if (obj[key] == null)\n      continue;\n    if (key === \"title\") {\n      tags.push({tag: key, props: {children: obj[key]}});\n    } else if (key === \"base\") {\n      tags.push({tag: key, props: {key: \"default\", ...obj[key]}});\n    } else if (acceptFields.includes(key)) {\n      const value = obj[key];\n      if (Array.isArray(value)) {\n        value.forEach((item) => {\n          tags.push({tag: key, props: item});\n        });\n      } else if (value) {\n        tags.push({tag: key, props: value});\n      }\n    }\n  }\n  return tags;\n};\nvar setAttrs = (el, attrs) => {\n  const existingAttrs = el.getAttribute(HEAD_ATTRS_KEY);\n  if (existingAttrs) {\n    for (const key of existingAttrs.split(\",\")) {\n      el.removeAttribute(key);\n    }\n  }\n  const keys = [];\n  for (const key in attrs) {\n    const value = attrs[key];\n    if (value == null)\n      continue;\n    if (value === false) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n    keys.push(key);\n  }\n  if (keys.length) {\n    el.setAttribute(HEAD_ATTRS_KEY, keys.join(\",\"));\n  } else {\n    el.removeAttribute(HEAD_ATTRS_KEY);\n  }\n};\nvar insertTags = (tags, document = window.document) => {\n  const head = document.head;\n  let headCountEl = head.querySelector(`meta[name=\"${HEAD_COUNT_KEY}\"]`);\n  const headCount = headCountEl ? Number(headCountEl.getAttribute(\"content\")) : 0;\n  const oldElements = [];\n  if (headCountEl) {\n    for (let i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = j.previousElementSibling) {\n      if (j) {\n        oldElements.push(j);\n      }\n    }\n  } else {\n    headCountEl = document.createElement(\"meta\");\n    headCountEl.setAttribute(\"name\", HEAD_COUNT_KEY);\n    headCountEl.setAttribute(\"content\", \"0\");\n    head.append(headCountEl);\n  }\n  const newElements = [];\n  let title;\n  let htmlAttrs = {};\n  let bodyAttrs = {};\n  for (const tag of tags) {\n    if (tag.tag === \"title\") {\n      title = tag.props.children;\n      continue;\n    }\n    if (tag.tag === \"htmlAttrs\") {\n      Object.assign(htmlAttrs, tag.props);\n      continue;\n    }\n    if (tag.tag === \"bodyAttrs\") {\n      Object.assign(bodyAttrs, tag.props);\n      continue;\n    }\n    newElements.push(createElement(tag.tag, tag.props, document));\n  }\n  oldElements.forEach((el) => {\n    el.remove();\n  });\n  if (title !== void 0) {\n    document.title = title;\n  }\n  setAttrs(document.documentElement, htmlAttrs);\n  setAttrs(document.body, bodyAttrs);\n  newElements.forEach((el) => {\n    head.insertBefore(el, headCountEl);\n  });\n  headCountEl.setAttribute(\"content\", \"\" + newElements.length);\n};\nvar createHead = () => {\n  let allHeadObjs = [];\n  const head = {\n    install(app) {\n      app.config.globalProperties.$head = head;\n      app.provide(PROVIDE_KEY, head);\n    },\n    get headTags() {\n      const deduped = [];\n      allHeadObjs.forEach((objs) => {\n        const tags = headObjToTags(objs.value);\n        tags.forEach((tag) => {\n          if (tag.tag === \"meta\" || tag.tag === \"base\") {\n            const key = getTagKey(tag.props);\n            if (key) {\n              let index = -1;\n              for (let i = 0; i < deduped.length; i++) {\n                const prev = deduped[i];\n                const prevValue = prev.props[key.name];\n                const nextValue = tag.props[key.name];\n                if (prev.tag === tag.tag && prevValue === nextValue) {\n                  index = i;\n                  break;\n                }\n              }\n              if (index !== -1) {\n                deduped.splice(index, 1);\n              }\n            }\n          }\n          deduped.push(tag);\n        });\n      });\n      return deduped;\n    },\n    addHeadObjs(objs) {\n      allHeadObjs.push(objs);\n    },\n    removeHeadObjs(objs) {\n      allHeadObjs = allHeadObjs.filter((_objs) => _objs !== objs);\n    },\n    updateDOM(document) {\n      insertTags(head.headTags, document);\n    }\n  };\n  return head;\n};\nvar IS_BROWSER = typeof window !== \"undefined\";\nvar useHead = (obj) => {\n  const headObj = ref(obj);\n  const head = injectHead();\n  head.addHeadObjs(headObj);\n  if (IS_BROWSER) {\n    watchEffect(() => {\n      head.updateDOM();\n    });\n    onBeforeUnmount(() => {\n      head.removeHeadObjs(headObj);\n      head.updateDOM();\n    });\n  }\n};\nvar tagToString = (tag) => {\n  let attrs = stringifyAttrs(tag.props);\n  if (SELF_CLOSING_TAGS.includes(tag.tag)) {\n    return `<${tag.tag}${attrs}>`;\n  }\n  return `<${tag.tag}${attrs}>${tag.props.children || \"\"}</${tag.tag}>`;\n};\nvar renderHeadToString = (head) => {\n  const tags = [];\n  let titleTag = \"\";\n  let htmlAttrs = {};\n  let bodyAttrs = {};\n  for (const tag of head.headTags) {\n    if (tag.tag === \"title\") {\n      titleTag = tagToString(tag);\n    } else if (tag.tag === \"htmlAttrs\") {\n      Object.assign(htmlAttrs, tag.props);\n    } else if (tag.tag === \"bodyAttrs\") {\n      Object.assign(bodyAttrs, tag.props);\n    } else {\n      tags.push(tagToString(tag));\n    }\n  }\n  tags.push(`<meta name=\"${HEAD_COUNT_KEY}\" content=\"${tags.length}\">`);\n  return {\n    get headTags() {\n      return titleTag + tags.join(\"\");\n    },\n    get htmlAttrs() {\n      return stringifyAttrs({\n        ...htmlAttrs,\n        [HEAD_ATTRS_KEY]: Object.keys(htmlAttrs).join(\",\")\n      });\n    },\n    get bodyAttrs() {\n      return stringifyAttrs({\n        ...bodyAttrs,\n        [HEAD_ATTRS_KEY]: Object.keys(bodyAttrs).join(\",\")\n      });\n    }\n  };\n};\nvar vnodesToHeadObj = (nodes) => {\n  const obj = {\n    title: void 0,\n    htmlAttrs: void 0,\n    bodyAttrs: void 0,\n    base: void 0,\n    meta: [],\n    link: [],\n    style: [],\n    script: []\n  };\n  for (const node of nodes) {\n    const type = node.type === \"html\" ? \"htmlAttrs\" : node.type === \"body\" ? \"bodyAttrs\" : node.type;\n    if (typeof type !== \"string\" || !(type in obj))\n      continue;\n    const props = {\n      ...node.props,\n      children: Array.isArray(node.children) ? node.children[0].children : node.children\n    };\n    if (Array.isArray(obj[type])) {\n      ;\n      obj[type].push(props);\n    } else if (type === \"title\") {\n      obj.title = props.children;\n    } else {\n      ;\n      obj[type] = props;\n    }\n  }\n  return obj;\n};\nvar Head = defineComponent({\n  name: \"Head\",\n  setup(_, {slots}) {\n    const head = injectHead();\n    let obj;\n    onBeforeUnmount(() => {\n      if (obj) {\n        head.removeHeadObjs(obj);\n        head.updateDOM();\n      }\n    });\n    return () => {\n      watchEffect(() => {\n        if (!slots.default)\n          return;\n        if (obj) {\n          head.removeHeadObjs(obj);\n        }\n        obj = ref(vnodesToHeadObj(slots.default()));\n        head.addHeadObjs(obj);\n        if (IS_BROWSER) {\n          head.updateDOM();\n        }\n      });\n      return null;\n    };\n  }\n});\nexport {\n  Head,\n  createHead,\n  injectHead,\n  renderHeadToString,\n  useHead\n};\n","/*!\n  * pinia v2.0.0-alpha.10\n  * (c) 2021 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { ref, warn, getCurrentInstance, inject, computed, reactive, watch } from 'vue';\n\nconst IS_CLIENT = typeof window !== 'undefined';\n\n/**\r\n * setActivePinia must be called to handle SSR at the top of functions like\r\n * `fetch`, `setup`, `serverPrefetch` and others\r\n */\r\nlet activePinia;\r\n/**\r\n * Sets or unsets the active pinia. Used in SSR and internally when calling\r\n * actions and getters\r\n *\r\n * @param pinia - Pinia instance\r\n */\r\nconst setActivePinia = (pinia) => (activePinia = pinia);\r\n/**\r\n * Get the currently active pinia\r\n */\r\nconst getActivePinia = () => {\r\n    if (!activePinia) {\r\n        warn(`[🍍]: getActivePinia was called with no active Pinia. Did you forget to install pinia?\\n\\n` +\r\n            `const pinia = createPinia()\\n` +\r\n            `app.use(pinia)\\n\\n` +\r\n            `This will fail in production.`);\r\n    }\r\n    return activePinia;\r\n};\r\n/**\r\n * Map of stores based on a Pinia instance. Allows setting and retrieving stores\r\n * for the current running application (with its pinia).\r\n */\r\nconst storesMap = new WeakMap();\r\n/**\r\n * Client-side application instance used for devtools\r\n */\r\nlet clientApp; /*#__PURE__*/\r\nconst setClientApp = (app) => (clientApp = app);\r\nconst getClientApp = () => clientApp;\r\nconst piniaSymbol = (Symbol('pinia')\r\n    );\r\n/**\r\n * Creates a Pinia instance to be used by the application\r\n */\r\nfunction createPinia() {\r\n    // NOTE: here we could check the window object for a state and directly set it\r\n    // if there is anything like it with Vue 3 SSR\r\n    const state = ref({});\r\n    let localApp;\r\n    let _p = [];\r\n    // plugins added before calling app.use(pinia)\r\n    const toBeInstalled = [];\r\n    const pinia = {\r\n        install(app) {\r\n            localApp = app;\r\n            // pinia._a = app\r\n            app.provide(piniaSymbol, pinia);\r\n            app.config.globalProperties.$pinia = pinia;\r\n            // TODO: write test\r\n            // only set the app on client for devtools\r\n            if (IS_CLIENT) {\r\n                setClientApp(app);\r\n                // this allows calling useStore() outside of a component setup after\r\n                // installing pinia's plugin\r\n                setActivePinia(pinia);\r\n            }\r\n            toBeInstalled.forEach((plugin) => _p.push(plugin.bind(null, localApp)));\r\n        },\r\n        use(plugin) {\r\n            /* istanbul ignore next */\r\n            {\r\n                console.warn(`[🍍]: The plugin API has plans to change to bring better extensibility. \"pinia.use()\" signature will change in the next release. It is recommended to avoid using this API.`);\r\n            }\r\n            if (!localApp) {\r\n                toBeInstalled.push(plugin);\r\n            }\r\n            else {\r\n                _p.push(plugin.bind(null, localApp));\r\n            }\r\n        },\r\n        _p,\r\n        state,\r\n    };\r\n    return pinia;\r\n}\n\nfunction isPlainObject(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no) {\r\n    return (o &&\r\n        typeof o === 'object' &&\r\n        Object.prototype.toString.call(o) === '[object Object]' &&\r\n        typeof o.toJSON !== 'function');\r\n}\n\nfunction getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nfunction getTarget() {\n    // @ts-ignore\n    return typeof navigator !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\n\nconst HOOK_SETUP = 'devtools-plugin:setup';\n\nfunction setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const hook = getDevtoolsGlobalHook();\n    if (hook) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const target = getTarget();\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor,\n            setupFn\n        });\n    }\n}\n\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n/**\r\n * Registered stores used for devtools.\r\n */\r\nconst registeredStores = /*#__PURE__*/ new Set();\r\nfunction toastMessage(message, type) {\r\n    const piniaMessage = '🍍 ' + message;\r\n    if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\r\n        __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\r\n    }\r\n    else if (type === 'error') {\r\n        console.error(piniaMessage);\r\n    }\r\n    else if (type === 'warning') {\r\n        console.warn(piniaMessage);\r\n    }\r\n    else {\r\n        console.log(piniaMessage);\r\n    }\r\n}\r\nlet isAlreadyInstalled;\r\nconst componentStateTypes = [];\r\nfunction addDevtools(app, store) {\r\n    registeredStores.add(store);\r\n    componentStateTypes.push('🍍 ' + store.$id);\r\n    setupDevtoolsPlugin({\r\n        id: 'dev.esm.pinia',\r\n        label: 'Pinia 🍍',\r\n        logo: 'https://pinia.esm.dev/logo.svg',\r\n        packageName: 'pinia',\r\n        homepage: 'https://pinia.esm.dev',\r\n        componentStateTypes,\r\n        app,\r\n    }, (api) => {\r\n        // watch(router.currentRoute, () => {\r\n        //   // @ts-ignore\r\n        //   api.notifyComponentUpdate()\r\n        // })\r\n        const mutationsLayerId = 'pinia:mutations';\r\n        const piniaInspectorId = 'pinia';\r\n        if (!isAlreadyInstalled) {\r\n            api.on.inspectComponent((payload, ctx) => {\r\n                if (payload.instanceData) {\r\n                    payload.instanceData.state.push({\r\n                        type: '🍍 ' + store.$id,\r\n                        key: 'state',\r\n                        editable: false,\r\n                        value: store.$state,\r\n                    });\r\n                }\r\n            });\r\n            api.addTimelineLayer({\r\n                id: mutationsLayerId,\r\n                label: `Pinia 🍍`,\r\n                color: 0xe5df88,\r\n            });\r\n            api.addInspector({\r\n                id: piniaInspectorId,\r\n                label: 'Pinia 🍍',\r\n                icon: 'storage',\r\n                treeFilterPlaceholder: 'Search stores',\r\n            });\r\n            isAlreadyInstalled = true;\r\n        }\r\n        else {\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(piniaInspectorId);\r\n            api.sendInspectorState(piniaInspectorId);\r\n        }\r\n        store.$subscribe((mutation, state) => {\r\n            // rootStore.state[store.id] = state\r\n            const data = {\r\n                store: formatDisplay(mutation.storeName),\r\n                // type: formatDisplay(mutation.type),\r\n            };\r\n            if (mutation.payload) {\r\n                data.payload = mutation.payload;\r\n            }\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorState(piniaInspectorId);\r\n            api.addTimelineEvent({\r\n                layerId: mutationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    title: mutation.type,\r\n                    data,\r\n                },\r\n            });\r\n        });\r\n        api.on.getInspectorTree((payload) => {\r\n            if (payload.app === app && payload.inspectorId === piniaInspectorId) {\r\n                const stores = Array.from(registeredStores);\r\n                payload.rootNodes = (payload.filter\r\n                    ? stores.filter((store) => store.$id.toLowerCase().includes(payload.filter.toLowerCase()))\r\n                    : stores).map(formatStoreForInspectorTree);\r\n            }\r\n        });\r\n        api.on.getInspectorState((payload) => {\r\n            if (payload.app === app && payload.inspectorId === piniaInspectorId) {\r\n                const stores = Array.from(registeredStores);\r\n                const store = stores.find((store) => store.$id === payload.nodeId);\r\n                if (store) {\r\n                    payload.state = {\r\n                        options: formatStoreForInspectorState(store),\r\n                    };\r\n                }\r\n                else {\r\n                    toastMessage(`store \"${payload.nodeId}\" not found`, 'error');\r\n                }\r\n            }\r\n        });\r\n        // trigger an update so it can display new registered stores\r\n        // @ts-ignore\r\n        api.notifyComponentUpdate();\r\n        toastMessage(`\"${store.$id}\" store installed`);\r\n    });\r\n}\r\nfunction formatStoreForInspectorTree(store) {\r\n    return {\r\n        id: store.$id,\r\n        label: store.$id,\r\n        tags: [],\r\n    };\r\n}\r\nfunction formatStoreForInspectorState(store) {\r\n    const fields = [\r\n        { editable: false, key: 'id', value: formatDisplay(store.$id) },\r\n        { editable: true, key: 'state', value: store.$state },\r\n    ];\r\n    return fields;\r\n}\n\nfunction innerPatch(target, patchToApply) {\r\n    // TODO: get all keys like symbols as well\r\n    for (const key in patchToApply) {\r\n        const subPatch = patchToApply[key];\r\n        const targetValue = target[key];\r\n        if (isPlainObject(targetValue) && isPlainObject(subPatch)) {\r\n            target[key] = innerPatch(targetValue, subPatch);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            target[key] = subPatch;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nconst { assign } = Object;\r\n/**\r\n * Create an object of computed properties referring to\r\n *\r\n * @param rootStateRef - pinia.state\r\n * @param id - unique name\r\n */\r\nfunction computedFromState(rootStateRef, id) {\r\n    // let asComputed = computed<T>()\r\n    const reactiveObject = {};\r\n    const state = rootStateRef.value[id];\r\n    for (const key in state) {\r\n        // @ts-ignore: the key matches\r\n        reactiveObject[key] = computed({\r\n            get: () => rootStateRef.value[id][key],\r\n            set: (value) => (rootStateRef.value[id][key] = value),\r\n        });\r\n    }\r\n    return reactiveObject;\r\n}\r\n/**\r\n * Creates a store with its state object. This is meant to be augmented with getters and actions\r\n *\r\n * @param id - unique identifier of the store, like a name. eg: main, cart, user\r\n * @param buildState - function to build the initial state\r\n * @param initialState - initial state applied to the store, Must be correctly typed to infer typings\r\n */\r\nfunction initStore($id, buildState = () => ({}), initialState) {\r\n    const pinia = getActivePinia();\r\n    pinia.state.value[$id] = initialState || buildState();\r\n    // const state: Ref<S> = toRef(_p.state.value, $id)\r\n    let isListening = true;\r\n    let subscriptions = [];\r\n    function $patch(partialStateOrMutator) {\r\n        let partialState = {};\r\n        let type;\r\n        isListening = false;\r\n        if (typeof partialStateOrMutator === 'function') {\r\n            partialStateOrMutator(pinia.state.value[$id]);\r\n            type = '🧩 patch';\r\n        }\r\n        else {\r\n            innerPatch(pinia.state.value[$id], partialStateOrMutator);\r\n            partialState = partialStateOrMutator;\r\n            type = '⤵️ patch';\r\n        }\r\n        isListening = true;\r\n        // because we paused the watcher, we need to manually call the subscriptions\r\n        subscriptions.forEach((callback) => {\r\n            callback({ storeName: $id, type, payload: partialState }, pinia.state.value[$id]);\r\n        });\r\n    }\r\n    function $subscribe(callback) {\r\n        subscriptions.push(callback);\r\n        // watch here to link the subscription to the current active instance\r\n        // e.g. inside the setup of a component\r\n        const stopWatcher = watch(() => pinia.state.value[$id], (state) => {\r\n            if (isListening) {\r\n                subscriptions.forEach((callback) => {\r\n                    callback({ storeName: $id, type: '🧩 in place', payload: {} }, state);\r\n                });\r\n            }\r\n        }, {\r\n            deep: true,\r\n            flush: 'sync',\r\n        });\r\n        return () => {\r\n            const idx = subscriptions.indexOf(callback);\r\n            if (idx > -1) {\r\n                subscriptions.splice(idx, 1);\r\n                stopWatcher();\r\n            }\r\n        };\r\n    }\r\n    function $reset() {\r\n        subscriptions = [];\r\n        pinia.state.value[$id] = buildState();\r\n    }\r\n    const storeWithState = {\r\n        $id,\r\n        _p: pinia,\r\n        // $state is added underneath\r\n        $patch,\r\n        $subscribe,\r\n        $reset,\r\n    };\r\n    return [\r\n        storeWithState,\r\n        {\r\n            get: () => pinia.state.value[$id],\r\n            set: (newState) => {\r\n                isListening = false;\r\n                pinia.state.value[$id] = newState;\r\n                isListening = true;\r\n            },\r\n        },\r\n    ];\r\n}\r\n/**\r\n * Creates a store bound to the lifespan of where the function is called. This\r\n * means creating the store inside of a component's setup will bound it to the\r\n * lifespan of that component while creating it outside of a component will\r\n * create an ever living store\r\n *\r\n * @param partialStore - store with state returned by initStore\r\n * @param descriptor - descriptor to setup $state property\r\n * @param $id - unique name of the store\r\n * @param getters - getters of the store\r\n * @param actions - actions of the store\r\n */\r\nfunction buildStoreToUse(partialStore, descriptor, $id, getters = {}, actions = {}) {\r\n    const pinia = getActivePinia();\r\n    const computedGetters = {};\r\n    for (const getterName in getters) {\r\n        computedGetters[getterName] = computed(() => {\r\n            setActivePinia(pinia);\r\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n            return getters[getterName].call(store, store);\r\n        });\r\n    }\r\n    const wrappedActions = {};\r\n    for (const actionName in actions) {\r\n        wrappedActions[actionName] = function () {\r\n            setActivePinia(pinia);\r\n            // eslint-disable-next-line\r\n            return actions[actionName].apply(store, arguments);\r\n        };\r\n    }\r\n    const extensions = pinia._p.reduce((extended, extender) => assign({}, extended, extender()), {});\r\n    const store = reactive(assign({}, extensions, partialStore, \r\n    // using this means no new properties can be added as state\r\n    computedFromState(pinia.state, $id), computedGetters, wrappedActions));\r\n    // use this instead of a computed with setter to be able to create it anywhere\r\n    // without linking the computed lifespan to wherever the store is first\r\n    // created.\r\n    Object.defineProperty(store, '$state', descriptor);\r\n    return store;\r\n}\r\n// only warn the dev once\r\nlet isDevWarned;\r\n/**\r\n * Creates a `useStore` function that retrieves the store instance\r\n * @param options - options to define the store\r\n */\r\nfunction defineStore(options) {\r\n    const { id, state, getters, actions } = options;\r\n    return function useStore(pinia) {\r\n        // avoid injecting if `useStore` when not possible\r\n        pinia = pinia || (getCurrentInstance() && inject(piniaSymbol));\r\n        if (pinia)\r\n            setActivePinia(pinia);\r\n        // TODO: worth warning on server if no piniaKey as it can leak data\r\n        pinia = getActivePinia();\r\n        let stores = storesMap.get(pinia);\r\n        if (!stores)\r\n            storesMap.set(pinia, (stores = new Map()));\r\n        let storeAndDescriptor = stores.get(id);\r\n        if (!storeAndDescriptor) {\r\n            storeAndDescriptor = initStore(id, state, pinia.state.value[id]);\r\n            stores.set(id, storeAndDescriptor);\r\n            const store = buildStoreToUse(storeAndDescriptor[0], storeAndDescriptor[1], id, getters, actions);\r\n            if (IS_CLIENT &&\r\n                true &&\r\n                true /*|| __FEATURE_PROD_DEVTOOLS__*/) {\r\n                const app = getClientApp();\r\n                /* istanbul ignore else */\r\n                if (app) {\r\n                    addDevtools(app, store);\r\n                }\r\n                else if (!isDevWarned && !false) {\r\n                    isDevWarned = true;\r\n                    console.warn(`[🍍]: store was instantiated before calling\\n` +\r\n                        `app.use(pinia)\\n` +\r\n                        `Make sure to install pinia's plugin by using createPinia:\\n` +\r\n                        `https://github.com/posva/pinia/tree/v2#install-the-plugin\\n` +\r\n                        `It will enable devtools and overall a better developer experience.`);\r\n                }\r\n            }\r\n            return store;\r\n        }\r\n        return buildStoreToUse(storeAndDescriptor[0], storeAndDescriptor[1], id, getters, actions);\r\n    };\r\n}\n\n/**\r\n * {@inheritDoc defineStore}\r\n * @deprecated Use {@link defineStore}\r\n */\r\nconst createStore = ((options) => {\r\n    console.warn('[🍍]: \"createStore\" has been deprecated and will be removed on the sable release, use \"defineStore\" instead.');\r\n    return defineStore(options);\r\n});\n\nexport { createPinia, createStore, defineStore, setActivePinia };\n","/*!\n  * vue-router v4.0.5\n  * (c) 2021 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, defineComponent, reactive, watchEffect, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nlet noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    let query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || pathname.toLowerCase().indexOf(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    let aLastIndex = a.matched.length - 1;\r\n    let bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (let key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        let positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    let foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash based url\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        let pathFromHash = hash.slice(1);\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    let currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    let historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/vue-router-next/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/vue-router-next/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (let callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (base.indexOf('#') < 0)\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    let score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we\r\n                            // don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        let isRootAdd = !originalRecord;\r\n        let mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            let { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                let parentPath = parent.record.path;\r\n                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                let children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            let index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    let newParams = {};\r\n    for (let key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (let name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    let options = {};\r\n    for (let key in defaults) {\r\n        options[key] =\r\n            key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (let key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (let key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (let key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        let eqPos = searchParam.indexOf('=');\r\n        let key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        let value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        if (search.length)\r\n            search += '&';\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined)\r\n                search += key;\r\n            continue;\r\n        }\r\n        // keep null values\r\n        let values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        for (let i = 0; i < values.length; i++) {\r\n            // only append & with i > 0\r\n            search += (i ? '&' : '') + key;\r\n            if (values[i] != null)\r\n                search += ('=' + values[i]);\r\n        }\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (let key in query) {\r\n        let value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-ignore: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    let promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                let options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                else {\r\n                    // display the error if any\r\n                    componentPromise = componentPromise.catch(console.error);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    let options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        let { matched } = route.value;\r\n        let { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        let currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        let parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e))\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to));\r\n        return Promise.resolve();\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    setup(props, { slots, attrs }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && true) {\r\n            const instance = getCurrentInstance();\r\n            watchEffect(() => {\r\n                if (!instance)\r\n                    return;\r\n                instance.__vrl_route = link.route;\r\n            });\r\n            watchEffect(() => {\r\n                if (!instance)\r\n                    return;\r\n                instance.__vrl_active = link.isActive;\r\n                instance.__vrl_exactActive = link.isExactActive;\r\n            });\r\n        }\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', assign({\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    onClick: link.navigate,\r\n                    href: link.href,\r\n                }, attrs, {\r\n                    class: elClass.value,\r\n                }), children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-ignore getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-ignore getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (let key in inner) {\r\n        let innerValue = inner[key];\r\n        let outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nfunction getTarget() {\n    // @ts-ignore\n    return typeof navigator !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\n\nconst HOOK_SETUP = 'devtools-plugin:setup';\n\nfunction setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const hook = getDevtoolsGlobalHook();\n    if (hook) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const target = getTarget();\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor,\n            setupFn\n        });\n    }\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://next.router.vuejs.org/',\r\n        logo: 'https://vuejs.org/images/icons/favicon-96x96.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            if (node.name === 'RouterLink') {\r\n                if (componentInstance.__vrl_route) {\r\n                    node.tags.push({\r\n                        label: componentInstance.__vrl_route.path,\r\n                        textColor: 0,\r\n                        backgroundColor: ORANGE_400,\r\n                    });\r\n                }\r\n                if (componentInstance.__vrl_exactActive) {\r\n                    node.tags.push({\r\n                        label: 'exact',\r\n                        textColor: 0,\r\n                        backgroundColor: LIME_500,\r\n                    });\r\n                }\r\n                if (componentInstance.__vrl_active) {\r\n                    node.tags.push({\r\n                        label: 'active',\r\n                        textColor: 0,\r\n                        backgroundColor: BLUE_600,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError(error => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error',\r\n                    subtitle: 'An uncaught error happened during navigation',\r\n                    logType: 'error',\r\n                    time: Date.now(),\r\n                    data: { error },\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    title: 'Start of navigation',\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    time: Date.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = String(routeRecordId++);\r\n    record.__vd_id = id;\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (let key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-ignore\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    let parseQuery$1 = options.parseQuery || parseQuery;\r\n    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    let routerHistory = options.history;\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        let recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            let href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        let href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : rawLocation.query,\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.indexOf('?') > -1 ||\r\n                        newTargetLocation.indexOf('#') > -1\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : { path: newTargetLocation };\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? error\r\n            : // reject any unknown error\r\n                triggerError(error))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-ignore\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-ignore\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords,] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && from.matched.indexOf(record) < 0) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            let toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    ).catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure && info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     * @param error - error to throw\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error) {\r\n        markAsReady(error);\r\n        errorHandlers.list().forEach(handler => handler(error));\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(triggerError);\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (let key in START_LOCATION_NORMALIZED) {\r\n                // @ts-ignore: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            let unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                if (installedApps.size < 1) {\r\n                    removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && true) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n"],"names":["str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","isGloballyWhitelisted","isSpecialBooleanAttr","value","isArray","res","item","normalized","normalizeStyle","isString","parseStringStyle","key","isObject","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","isHTMLTag","isSVGTag","isVoidTag","a","b","aValidType","isDate","bValidType","getTime","equal","looseEqual","looseCompareArrays","keys","aHasKey","hasOwnProperty","bHasKey","String","arr","findIndex","toDisplayString","JSON","stringify","replacer","_key","isMap","size","entries","reduce","val2","isSet","values","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","test","isModelListener","startsWith","extend","assign","remove","el","indexOf","splice","prototype","hasOwn","call","Array","toTypeString","Date","isFunction","isSymbol","isPromise","then","catch","objectToString","toString","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","slice","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","defineProperty","configurable","enumerable","toNumber","n","parseFloat","isNaN","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","options","_isEffect","isEffect","raw","effect2","active","scheduler","includes","push","shouldTrack","pop","id","uid","allowRecurse","deps","createReactiveEffect","lazy","onStop","delete","trackStack","last2","target","type","depsMap","get","set","Map","dep","Set","has","add","newValue","oldTarget","effects","add2","effectsToAdd","key2","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly2","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","method","args","toRaw","this","l","apply","hadKey","Number","result","mutableHandlers","deleteProperty","ownKeys","readonlyHandlers","shallowReactiveHandlers","shallowReadonlyHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","isShallow","rawTarget","rawKey","track","wrap","has2","get2","hadItems","clear","callback","thisArg","observed","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","[object Object]","done","next","mutableInstrumentations","get$1","has$1","set$1","deleteEntry","createForEach","shallowInstrumentations","readonlyInstrumentations","createReadonlyMethod","shallowReadonlyInstrumentations","instrumentations","createIterableMethod","mutableCollectionHandlers","createInstrumentationGetter","shallowCollectionHandlers","readonlyCollectionHandlers","shallowReadonlyCollectionHandlers","isExtensible","rawType","targetTypeMap","toRawType","createReactiveObject","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","getTargetType","proxy","Proxy","isReadonly","isReactive","convert","r","Boolean","__v_isRef","createRef","_rawValue","_shallow","_value","newVal","rawValue","RefImpl","ref2","shallowUnwrapHandlers","unref","objectWithRefs","factory","trigger","_get","_set","set2","_object","object","ObjectRefImpl","getter","_setter","_dirty","effect","self","stack","msg","instance","component","appWarnHandler","appContext","config","warnHandler","trace","currentVNode","normalizedStack","vnode","recurseCount","parentInstance","parent","getComponentTrace","join","formatComponentName","warnArgs","logs","entry","postfix","isRoot","open","close","props","formatProps","formatTraceEntry","formatTrace","warn","formatProp","err","callWithErrorHandling","callWithAsyncErrorHandling","throwInDev","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","contextVNode","error","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","p2","bind","job","pos","start","end","jobId","getId","middle","findInsertionIndex","flushJobs","cb","activeQueue","pendingQueue","index","seen2","parentJob","deduped","sort","Infinity","devtools","event","rawArgs","isModelListener2","modelArg","modifiersKey","number","handlerName","handler","onceHandler","emitted","comp","asMixin","deopt","__emits","emits","hasExtends","extendEmits","raw2","normalizedFromExtend","normalizeEmitsOptions","mixins","extends","isRenderingCompiledSlot","setCompiledSlotRendering","vnodes","some","isVNode","child","Comment","Fragment","ensureValidVNode","children","currentRenderingInstance","currentScopeId","prev","__scopeId","withScopeId","_id","withCtx","ctx","renderFnWithContext","prevInstance","setCurrentRenderingInstance","_c","Component","withProxy","propsOptions","slots","attrs","emit","render","renderCache","data","setupState","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","render2","render3","getFunctionalFallthrough","root","inheritAttrs","filterModelListeners","cloneVNode","dirs","concat","transition","createVNode","singleRoot","prevProps","nextProps","emitsOptions","nextKeys","isEmitListener","subTree","Suspense","__isSuspense","n1","n2","container","anchor","parentComponent","parentSuspense","isSVG","slotScopeIds","optimized","rendererInternals","p","patch","o","createElement","hiddenContainer","createElement2","suspense","createSuspenseBoundary","pendingBranch","ssContent","ssFallback","um","unmount","newBranch","newFallback","activeBranch","isInFallback","isHydrating","isSameVNodeType","pendingId","onPending","timeout","fallback","hydrate","node","hydrateNode","parentNode","document","m","move","isUnmounted","resume","delayEnter","mode","afterLeave","container2","anchor2","parentComponent2","parent2","hasUnresolvedAncestor","onResolve","vnode2","fallbackVNode","onFallback","mountFallback","isSVG2","setupRenderEffect","isInPendingSuspense","hydratedEl","asyncDep","suspenseId","asyncResolved","asyncSetupResult","placeholder","doRemove","s","filterSingleRoot","branch","rawProps","needCastKeys","camelKey","rawCurrentProps","resolvePropValue","opt","hasDefault","defaultValue","default","Function","propsDefaults","__props","extendProps","normalizePropsOptions","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","ctor","match","getType","expectedTypes","isSameType","t","hook","currentInstance","prepend","hooks","wrappedHook","__weh","unshift","createHook","lifecycle","isInSSRComponentSetup","injectHook","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","doWatch","INITIAL_WATCHER_VALUE","source","immediate","deep","flush","onTrack","onTrigger","cleanup2","forceTrigger","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","publicThis","state","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransition","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","useTransitionState","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","update","delayLeave","earlyRemove","delayedLeave","getLeavingNodesForType","_leaveCb","leavingVNodesCache","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","remove2","clone","isKeepAlive","keepComment","keyedFragmentCount","patchFlag","__isKeepAlive","KeepAlive","include","RegExp","exclude","max","sharedContext","renderer","current","_unmount","storageContainer","getComponentName","cached","activate","instance2","isDeactivated","vnodeHook","onVnodeMounted","deactivate","da","onVnodeUnmounted","pruneCache","matches","pendingCacheKey","cacheSubtree","getInnerChild","rawVNode","cachedVNode","pattern","__wdc","keepAliveRoot","injected","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","directives","bindings","dir","modifiers","mounted","updated","prevVNode","oldBindings","binding","app","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","components","provides","hydrate2","rootComponent","rootProps","context","createAppContext","installedPlugins","_uid","_component","_props","_container","_context","version","use","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","provide","hasMismatch","isSVGContainer","namespaceURI","tagName","isComment","nodeType","mt","mountComponent","patchProp","nextSibling","insert","createComment","isFragmentStart","onMismatch","handleMismatch","ref","domType","nextNode","Text","Static","needToAdoptContent","staticCount","outerHTML","hydrateFragment","hydrateElement","hydrateComponent","loadAsync","__asyncLoader","locateClosingAsyncAnchor","hydrateChildren","dynamicChildren","onClick","vnodeHooks","onVnodeBeforeMount","invokeVNodeHook","invokeDirectiveHook","innerHTML","textContent","firstChild","parentVNode","fragmentSlotScopeIds","isFragment","next2","setup","prodEffectOptions","queueJob","queueEffectWithSuspense","setRef","rawRef","oldRawRef","exposed","owner","oldRef","refs","doSet","baseCreateRenderer","createHydrationFunctions","createHydrationFns","hostInsert","hostRemove","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","getNextHostNode","process","internals","processText","processCommentNode","mountStaticNode","processElement","mountElement","is","unmountChildren","scopeId","needCallTransitionHooks","beforeEnter","enter","mountChildren","cloneIfMounted","patchElement","oldProps","newProps","onVnodeBeforeUpdate","class","style","propsToUpdate","dynamicProps","areChildrenSVG","onVnodeUpdated","patchBlockChildren","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","patchProps","processFragment","fragmentStartAnchor","fragmentEndAnchor","processComponent","initialVNode","emptyAppContext","uid$1","accessCache","setupContext","bc","bm","bu","u","bum","rtg","rtc","createComponentInstance","isSSR","isStateful","isStatefulComponent","InternalObjectKey","shallowReactive","setupResult","PublicInstanceProxyHandlers","createSetupContext","resolvedResult","e","setupStatefulComponent","registerDep","updateComponent","nextVNode","prevChildren","nextChildren","$stable","hasPropsChanged","shouldUpdateComponent","originNext","nextTree","renderComponentRoot","prevTree","scopedInitialVNode","updateComponentPreRender","rawPrevProps","kebabKey","camelizedKey","needDeletionCheck","deletionComparisonTarget","patchChildren","c1","prevShapeFlag","c2","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","patchKeyedChildren","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","len","arrI","getSequence","nextIndex","moveType","leave","remove3","performLeave","shouldInvokeDirs","onVnodeBeforeUnmount","performRemove","removeFragment","unmountComponent","_vnode","mc","pc","pbc","createApp","createAppAPI","ch1","ch2","isTeleportDisabled","disabled","isTargetSVG","SVGElement","resolveTarget","select","targetSelector","to","targetAnchor","isReorder","Teleport","__isTeleport","querySelector","mainAnchor","mount","wasDisabled","currentContainer","currentAnchor","nextTarget","moveTeleport","targetNode","_lpa","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","registry","blockStack","currentBlock","disableTracking","__v_isVNode","normalizeKey","normalizeRef","isBlockNode","cloned","__vccOpts","isProxy","klass","isSuspense","isTeleport","content","normalizeSuspenseSlot","normalizeSuspenseChildren","extraProps","mergeRef","mergedProps","mergeProps","text","flag","asBlock","createBlock","slot","slotFlag","createTextVNode","toMerge","existing","incoming","parentProvides","treatDefaultAsFactory","arguments","shouldCacheAccess","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watch","watchOptions","provideOptions","inject","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","from","methodHandler","resolveData","dataFn","watchOptions2","provideOptions2","proxyRefs","toRef","base","selfHook","path","segments","createPathGetter","createWatcher","strats","mergeOptions","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","__merged","resolveMergedOptions","$forceUpdate","$nextTick","nextTick","$watch","instanceWatch","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","setCurrentInstance","compile","_compile","template","delimiters","_rc","classifyRE","displayName","__file","inferFromRegistry","getterOrOptions","setter","ComputedRefImpl","computed$1","propsOrChildren","ssrContextKey","renderItem","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","nodeValue","selector","temp","first","importantRE","setStyle","setProperty","prefixed","rawName","prefixCache","prefixes","autoPrefix","xlinkNS","_getNow","now","skipTimestampCheck","window","createEvent","timeStamp","ffMatch","navigator","userAgent","cachedNow","reset","addEventListener","prevValue","nextValue","invokers","_vei","existingInvoker","optionsModifierRE","parseName","initialValue","invoker","attached","originalStop","stopImmediatePropagation","_stopped","patchStopImmediatePropagation","getNow","createInvoker","removeEventListener","nativeOnRE","vars","setVarsOnVNode","Transition","h","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","baseProps","durations","NumberOf","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","finishLeave","makeEnterHook","resolve2","cls","classList","_vtc","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","TRANSITION","transitionDurations","transitionTimeout","getTimeout","animationDelays","ANIMATION","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","positionMap","newPositionMap","TransitionGroup","moveClass","display","appendChild","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","transform","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","getModelAssigner","composing","initEvent","dispatchEvent","vModelText","_assign","castToNumber","domValue","onCompositionStart","onCompositionEnd","activeElement","vModelCheckbox","modelValue","_modelValue","elementValue","getValue","checked","assign2","looseIndexOf","found","filtered","getCheckboxValue","setChecked","vModelRadio","vModelSelect","isSetModel","selectedVal","selected","_binding","isMultiple","option","optionValue","selectedIndex","vModelDynamic","modelToUse","systemModifiers","modifierGuards","stop","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","button","right","exact","keyNames","esc","space","up","down","withKeys","eventKey","k","vShow","_vod","rendererOptions","transitionClasses","className","removeAttribute","shouldSetAsProp","_trueValue","_falseValue","removeAttributeNS","setAttributeNS","isBoolean","enabledHydration","createRenderer","createHydrationRenderer","ensureRenderer","containerOrSelector","normalizeContainer","Element","ensureHydrationRenderer","modules","mod","setVars","watchEffect","guard","CustomRefImpl","dynamicSlots","numberOfNodes","loader","loadingComponent","errorComponent","delay","suspensible","onError","userOnError","resolvedComp","pendingRequest","retries","load","thisRequest","Error","reject","__esModule","toStringTag","defineComponent","createInnerComp","loaded","delayed","noSlotted","validSlotContent","rendered","transformer","code","loc","messages","additionalMessage","SyntaxError","FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_SCOPE_ID","WITH_CTX","UNREF","IS_REF","helperNameMap","locStub","line","column","offset","isBlock","helper","elements","properties","createSimpleExpression","isStatic","constType","callee","params","returns","newline","isSlot","consequent","alternate","isStaticExp","isBuiltInType","expected","nonIdentifierRE","isSimpleIdentifier","memberExpRE","isMemberExpression","newLoc","substr","advancePositionWithClone","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","allowEmpty","exp","dynamicOnly","isBindKey","tagType","propsWithInjection","createObjectExpression","createCallExpression","alreadyExists","propKeyName","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","getNamespace","getTextMode","isPreTag","decodeEntities","rawText","p1","defaultOnError","comments","rawOptions","originalSource","inPre","inVPre","createParserContext","getCursor","helpers","hoists","imports","temps","codegenNode","createRoot","parseChildren","getSelection","ancestors","last","ns","nodes","isEnd","parseInterpolation","parseComment","parseBogusComment","parseCDATA","parseElement","parseText","removedWhitespace","exec","prevIndex","nestedIndex","contentStart","closeIndex","wasInPre","wasInVPre","element","parseTag","isPreBoundary","isVPreBoundary","isSelfClosing","startsWithEndTagOpen","isSpecialTemplateDirective","cursor","currentSource","parseAttributes","hasVIs","isCoreComponent","isBuiltInComponent","attributeNames","attr","parseAttribute","nameSet","quote","isQuoted","endIndex","parseTextData","unexpectedChars","parseAttributeValue","match2","dirName","startOffset","lastIndexOf","loc2","getNewPosition","endsWith","valueLoc","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endTokens","xs","searchString","createCompilerError","isSingleElementRoot","isSlotOutlet","doNotHoistNode","hasHoistedNode","canStringify","constantType","getConstantType","hoist","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","contentType","isComponent","scopes","vSlot","i2","branches","transformHoist","constantCache","returnType2","generatedPropsType","childType","expType","removeHelper","returnType","keyType","valueType","filename","prefixIdentifiers","hoistStatic","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","slotted","ssr","ssrCssVars","bindingMetadata","inline","isTS","nameMatch","camelize$1","identifiers","vFor","vPre","vOnce","currentNode","childIndex","count","currentCount","helperString","removalIndex","onNodeRemoved","identifier","hoisted","isVNode2","createCacheExpression","createTransformContext","createVNodeCall","exitFns","onExit","nodeRemoved","matches2","isVSlot","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","indentLevel","pure","withoutNewLine","repeat","createCodegenContext","onContextCreated","indent","deindent","hasHelpers","useWithBlock","VueBinding","aliasHelper","preamble","toJSON","assets","resolver","toValidAssetId","multilines","comma","genNullableArgs","needNewline","needsParens","isNested","transformIf","createStructuralDirectiveTransform","processCodegen","createIfBranch","ifNode","replaceNode","siblings","sibling","removeNode","processIf","createCodegenNodeForBranch","getParentCondition","condition","findDir","userKey","findProp","keyIndex","createConditionalExpression","createChildrenCodegenNode","keyProperty","createObjectProperty","vnodeCall","transformFor","parseResult","parseForExpression","addIdentifiers","removeIdentifiers","forNode","valueAlias","keyAlias","objectIndexAlias","isTemplateNode","processFor","renderExp","keyProp","isStableFragment","fragmentFlag","childBlock","isTemplate","needFragmentWrapper","slotOutlet","createFunctionExpression","createForLoopParams","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","getInnerRange","defaultFallback","trackSlotScopes","buildClientSlotFn","buildSlotFn","slotsProperties","buildDefaultSlotProperty","children2","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","hasForwardedSlots","createArrayExpression","directiveImportMap","transformElement","vnodeTag","isProp","isComponentTag","builtIn","resolveComponentType","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","dirArgs","runtime","trueExpression","modifier","buildDirectiveArgs","buildSlots","hasDynamicTextChild","propsNamesString","stringifyDynamicPropNames","elementLoc","mergeArgs","runtimeDirectives","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isBind","isOn2","dedupeProperties","directiveTransform","needRuntime","props2","propsExpression","knownProps","transformSlotOutlet","nonNameProps","processSlotOutlet","slotArgs","fnExpRE","transformOn","augmentor","eventName","createCompoundExpression","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","transformText","hasText","isText","callArgs","seen","WeakSet","transformOnce","transformModel","createTransformProps","rawExp","expString","propName","assignmentExp","isModuleMode","baseParse","on","model","generate","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION_GROUP","decoder","getOwnPropertySymbols","isRawTextContainer","parserOptions","parseInlineCSS","isEventOptionModifier","isNonKeyModifier","maybeKeyModifier","isKeyboardEvent","transformClick","ignoreSideEffectTags","createDOMCompilerError","DOMNodeTransforms","DOMDirectiveTransforms","cloak","html","baseResult","transformModel$1","directiveToUse","isInvalidType","hasDynamicKeyVBind","transformOn$1","handlerExp","keyModifiers","nonKeyModifiers","eventOptionModifiers","resolveModifiers","modifierPostfix","show","compileCache","registerRuntimeCompiler","baseCompile","runtimeDom","document2","injectHead","head","acceptFields","setAttrs","existingAttrs","getAttribute","createHead","allHeadObjs","$head","objs","tags","__assign","headObjToTags","property","_objs","headCountEl","headCount","oldElements","previousElementSibling","append","newElements","title","htmlAttrs","bodyAttrs","documentElement","headTags","IS_BROWSER","useHead","headObj","addHeadObjs","updateDOM","removeHeadObjs","link","script","vnodesToHeadObj","IS_CLIENT","activePinia","setActivePinia","pinia","getActivePinia","storesMap","clientApp","piniaSymbol","localApp","_p","toBeInstalled","$pinia","global","pluginDescriptor","setupFn","getTarget","__VUE_DEVTOOLS_GLOBAL_HOOK__","__VUE_DEVTOOLS_PLUGINS__","_custom","registeredStores","message","piniaMessage","__VUE_DEVTOOLS_TOAST__","log","isAlreadyInstalled","componentStateTypes","store","$id","label","editable","formatDisplay","$state","patchToApply","subPatch","targetValue","innerPatch","buildState2","initialState","isListening","subscriptions","$patch","partialStateOrMutator","partialState","storeName","payload","$subscribe","stopWatcher","callback2","idx","$reset","newState","partialStore","descriptor","getters","actions","computedGetters","getterName","wrappedActions","actionName","extensions","extended","extender","rootStateRef","reactiveObject","computedFromState","isDevWarned","stores","storeAndDescriptor","initStore","buildStoreToUse","logo","packageName","homepage","api","mutationsLayerId","piniaInspectorId","notifyComponentUpdate","sendInspectorTree","sendInspectorState","inspectComponent","instanceData","addTimelineLayer","color","addInspector","icon","treeFilterPlaceholder","mutation","addTimelineEvent","layerId","time","getInspectorTree","inspectorId","rootNodes","store2","formatStoreForInspectorTree","getInspectorState","find","store3","nodeId","formatStoreForInspectorState","hasSymbol","PolySymbol","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","isBrowser","newParams","noop","TRAILING_SLASH_RE","parseQuery2","location2","currentLocation","query","hash","searchPos","hashPos","fromSegments","toSegments","toPosition","segment","position","resolveRelativePath","fullPath","pathname","aliasOf","isSameRouteLocationParamsValue","isEquivalentArray","every","NavigationType","NavigationType2","NavigationDirection","NavigationDirection2","baseEl","BEFORE_HASH_RE","computeScrollPosition","pageXOffset","pageYOffset","scrollToOptions","positionEl","isIdSelector","getElementById","docRect","elRect","behavior","getElementPosition","scrollTo","delta","history","scrollPositions","search","pathFromHash","stripBase","back","forward","replaced","computeScroll","scroll","location","createCurrentLocation","historyState","history2","replace2","hashIndex","url","host","protocol","currentState","buildState","historyNavigation","useHistoryStateNavigation","normalizeBase","historyListeners","listeners","teardowns","pauseState","popStateHandler","fromState","direction","unknown","replaceState","beforeUnloadListener","pauseListeners","listen","teardown","destroy","useHistoryListeners","routerHistory","go","triggerListeners","createHref","START_LOCATION_NORMALIZED","matched","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","NavigationFailureType2","BASE_PATH_PARSER_OPTIONS","sensitive","strict","REGEX_CHARS_RE","diff","aScore","score","bScore","compareScoreArray","ROOT_TOKEN","VALID_PARAM_RE","record","parser","extraOptions","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re2","subPattern","re","parse","avoidDuplicatedSlash","param","tokensToParser","buffer","previousState","tokens","char","customRe","tokenizePath","matcher","alias","routes","globalOptions","matchers","matcherMap","originalRecord","isRootAdd","mainNormalizedRecord","redirect","normalizeRecordProps","instances","leaveGuards","updateGuards","enterCallbacks","normalizeRouteRecord","normalizedRecords","aliases","originalMatcher","normalizedRecord","parentPath","connectingSlash","createRouteRecordMatcher","isAliasRecord","matcherRef","isRouteName","removeRoute","comparePathParserScore","addRoute","route","createRouterError","paramsFromLocation","parentMatcher","mergeMetaFields","getRoutes","getRecordMatcher","propsObject","defaults","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","encodeURI","commonEncode","encodePath","decodeURIComponent","searchParams","searchParam","eqPos","decode","currentValue","encodeQueryValue","normalizedQuery","handlers","enterCallbackArray","valid","guardReturn","guardCall","guardType","guards","rawComponent","guardToPromiseFn","componentPromise","console","resolved","resolvedComponent","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","isSameRouteRecord","parentRecordPath","getOriginalPath","isActive","outer","inner","innerValue","outerValue","includesParams","isExactActive","isSameRouteLocationParams","href","navigate","defaultPrevented","guardEvent","RouterLink","required","activeClass","exactActiveClass","custom","ariaCurrentValue","useLink","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","aria-current","propClass","globalClass","defaultClass","slotContent","RouterView","injectedRoute","routeToDisplay","depth","matchedRouteRef","viewRef","oldInstance","oldName","matchedRoute","ViewComponent","currentName","routePropsOption","routeProps","createRouterMatcher","parseQuery$1","parseQuery","stringifyQuery$1","stringifyQuery","beforeGuards","useCallbacks","beforeResolveGuards","afterGuards","shallowRef","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","applyToParams","paramValue","encodeParams","encodeParam","decodeParams","rawLocation","locationNormalized","parseURL","matchedRoute2","href2","matcherLocation","stringifyQuery2","stringifyURL","normalizeQuery","pushWithRedirect","lastMatched","newTargetLocation","locationAsObject","targetLocation","force","shouldRedirect","handleRedirectRecord","toLocation","failure","aLastIndex","bLastIndex","isSameRouteLocation","isNavigationFailure","triggerError","failure2","finalizeNavigation","checkCanceledNavigation","leavingRecords","updatingRecords","enteringRecords","recordFrom","recordTo","extractChangingRecords","extractComponentsGuards","reverse","canceledNavigationCheck","checkCanceledNavigationAndReject","runGuardQueue","isPush","isFirstNavigation","removeHistoryListener","_from","info","scrollPosition","getScrollKey","ready","readyHandlers","errorHandlers","resolve3","getSavedScrollPosition","scrollToPosition","started","installedApps","parentOrRoute","recordMatcher","hasRoute","routeMatcher","beforeEach","beforeResolve","afterEach","isReady","$router","reactiveRoute","unmountApp","promise"],"mappings":"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"}